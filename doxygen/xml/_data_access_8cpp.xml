<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="_data_access_8cpp" kind="file" language="C++">
    <compoundname>DataAccess.cpp</compoundname>
    <includes refid="_data_access_8h" local="yes">DataAccess.h</includes>
    <incdepgraph>
      <node id="2">
        <label>DataAccess.h</label>
        <link refid="_data_access_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="1">
        <label>DataAccess.cpp</label>
        <link refid="_data_access_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>DateTime.h</label>
        <link refid="_date_time_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="16">
        <label>TickerData.h</label>
        <link refid="_ticker_data_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>PrefixHeader.pch</label>
        <link refid="_prefix_header_8pch"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>typeinfo</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_data_access_8h" kindref="compound">DataAccess.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Member<sp/>variables<sp/>declaration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="class_data_access" kindref="compound">DataAccess</ref>*<sp/><ref refid="class_data_access_1a6052079ffd5ad4d1d20dc311a2edf1de" kindref="member">DataAccess::m_dataInstance</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_data_access_1aa2021225186679fab899867e14256462" kindref="member">DataAccess::m_tickerNames</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::vector&lt;DateTime*&gt;<sp/><ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">DataAccess::m_tradingDates</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">std::map&lt;std::string,<sp/>TickerData*&gt;<sp/><ref refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" kindref="member">DataAccess::m_tickerData</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>reference<sp/>ticker<sp/>to<sp/>IBM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_data_access_1a103ea7eafa2a2da552050ce3726955b9" kindref="member">DataAccess::m_tradingDatesRefTicker</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IBM&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************<sp/>CONSTRUCTORS<sp/>**********************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_data_access_1a6401bb06d5a926b9fdb9d03f58d9952b" refkind="member"><highlight class="normal"><ref refid="class_data_access_1af99b77ec290d1e723d0540ba9d9a95ba" kindref="member">DataAccess::DataAccess</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;a_directory,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;a_universe<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" kindref="member">loadTickerNames</ref>(a_universe);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" kindref="member">loadTickerData</ref>(a_directory);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*****************<sp/>PUBLIC<sp/>CLASS<sp/>METHODS<sp/>******************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_data_access_1abc3ed687ddf164425f4f7c797eddcb55" refkind="member"><highlight class="normal"><ref refid="class_data_access" kindref="compound">DataAccess</ref>*<sp/><ref refid="class_data_access_1abc3ed687ddf164425f4f7c797eddcb55" kindref="member">DataAccess::GetDbInstance</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>a_directory,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>a_universe<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_data_access_1a6052079ffd5ad4d1d20dc311a2edf1de" kindref="member">m_dataInstance</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_access_1a6052079ffd5ad4d1d20dc311a2edf1de" kindref="member">m_dataInstance</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_data_access_1af99b77ec290d1e723d0540ba9d9a95ba" kindref="member">DataAccess</ref>(a_directory,<sp/>a_universe);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_data_access_1a6052079ffd5ad4d1d20dc311a2edf1de" kindref="member">m_dataInstance</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_data_access_1a999d5066dde617c2b244606d57f003ed" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_data_access_1a999d5066dde617c2b244606d57f003ed" kindref="member">DataAccess::CheckDateRange</ref>(<sp/><ref refid="class_date_time" kindref="compound">DateTime</ref>*<sp/>a_startDate,<sp/><ref refid="class_date_time" kindref="compound">DateTime</ref>*<sp/>a_endDate<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>[0]&lt;=*a_startDate<sp/>&amp;&amp;<sp/>*<ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>[<ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>.size()-1]&gt;=*a_endDate);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_data_access_1aca25ff0e8ce73d87a8e2f4584ee87149" refkind="member"><highlight class="normal">std::vector&lt;DateTime*&gt;<sp/><ref refid="class_data_access_1aca25ff0e8ce73d87a8e2f4584ee87149" kindref="member">DataAccess::GetTradingDatesInRange</ref>(<sp/><ref refid="class_date_time" kindref="compound">DateTime</ref>*<sp/>a_from,<sp/><ref refid="class_date_time" kindref="compound">DateTime</ref>*<sp/>a_to)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DateTime*&gt;<sp/>t_tradeDates;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>=0;<sp/><ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>&lt;<ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>.size();<sp/><ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*<ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>[<ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>]&gt;=*a_from<sp/>&amp;&amp;<sp/>*<ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>[<ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>]&lt;=*a_to)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_tradeDates.insert(t_tradeDates.begin(),<sp/><ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>[<ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t_tradeDates;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_data_access_1a8fef2d9972260413cc5c949d6ad7f245" refkind="member"><highlight class="normal"><ref refid="class_ticker_data" kindref="compound">TickerData</ref>*<sp/><ref refid="class_data_access_1a8fef2d9972260413cc5c949d6ad7f245" kindref="member">DataAccess::GetTickerData</ref>(std::string<sp/>a_ticker)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" kindref="member">m_tickerData</ref>.find(a_ticker)!=<ref refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" kindref="member">m_tickerData</ref>.end())</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" kindref="member">m_tickerData</ref>[a_ticker];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>***************<sp/>PRIVATE<sp/>UTILITY<sp/>METHODS<sp/>*****************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" kindref="member">DataAccess::loadTickerNames</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;a_universe<sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>t_ins(a_universe);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>t_buffer;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t_ins)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dorothy<sp/>Error<sp/>(LoadTickerNames):<sp/>Unable<sp/>to<sp/>load<sp/>TickerData<sp/>Names<sp/>from<sp/>directory<sp/>[&quot;</highlight><highlight class="normal">&lt;&lt;a_universe&lt;&lt;</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>ticker<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!t_ins.eof())</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(t_ins,<sp/>t_buffer);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_buffer.empty()<sp/>|<sp/>t_buffer==</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_access_1aa2021225186679fab899867e14256462" kindref="member">m_tickerNames</ref>.push_back(t_buffer);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" kindref="member">DataAccess::loadTradingDates</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;a_directory<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>t_ins(a_directory);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>t_buffer;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!t_ins)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dorothy<sp/>Error<sp/>(LoadTradingDates):<sp/>Unable<sp/>to<sp/>load<sp/>Trading<sp/>Dates<sp/>from<sp/>reference<sp/>ticker<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<ref refid="class_data_access_1a103ea7eafa2a2da552050ce3726955b9" kindref="member">m_tradingDatesRefTicker</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>directory:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">&lt;&lt;a_directory&lt;&lt;</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>ticker<sp/>title<sp/>and<sp/>column<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>getline(t_ins,<sp/>t_buffer);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>getline(t_ins,<sp/>t_buffer);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>trading<sp/>dates<sp/>from<sp/>first<sp/>column<sp/>and<sp/>store<sp/>in<sp/>reverse<sp/>chronological<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getline(t_ins,<sp/>t_buffer))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" kindref="member">m_tradingDates</ref>.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_date_time" kindref="compound">DateTime</ref>(<sp/>stoi(<sp/>t_buffer.substr(0,<sp/>t_buffer.find(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))<sp/>)<sp/>));</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" kindref="member">DataAccess::loadTickerData</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;a_directory<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>trading<sp/>dates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" kindref="member">loadTradingDates</ref>(a_directory+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<ref refid="class_data_access_1a103ea7eafa2a2da552050ce3726955b9" kindref="member">m_tradingDatesRefTicker</ref>+</highlight><highlight class="stringliteral">&quot;_.csv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Dorothy:<sp/>Loading<sp/>data<sp/>for<sp/>constituents<sp/>in<sp/>universe...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;******************************************&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Dorothy<sp/>-<sp/>Tickers<sp/>Loaded:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>=0;<sp/><ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>&lt;<ref refid="class_data_access_1aa2021225186679fab899867e14256462" kindref="member">m_tickerNames</ref>.size();<sp/><ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>t_ticker<sp/>=<sp/><ref refid="class_data_access_1aa2021225186679fab899867e14256462" kindref="member">m_tickerNames</ref>[<ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>t_filePath<sp/>=<sp/>a_directory<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>t_ticker<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_.csv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>t_ins(t_filePath);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>data<sp/>file.<sp/>Continue<sp/>with<sp/>execution...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_ins.fail())</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Dorothy<sp/>Error<sp/>(LoadTickerData):<sp/>Unable<sp/>to<sp/>load<sp/>price<sp/>data<sp/>for<sp/>ticker<sp/>[&quot;</highlight><highlight class="normal">&lt;&lt;t_ticker&lt;&lt;</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(<ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>+1)&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>]<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;t_ticker&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(FAILED)&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>ticker<sp/>for<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_access_1aa2021225186679fab899867e14256462" kindref="member">m_tickerNames</ref>.erase(<ref refid="class_data_access_1aa2021225186679fab899867e14256462" kindref="member">m_tickerNames</ref>.begin()+<ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>--;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" kindref="member">m_tickerData</ref>[t_ticker]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ticker_data" kindref="compound">TickerData</ref>(t_ticker,<sp/>t_filePath);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEBUG:<sp/>PRINT<sp/>DATA<sp/>HEADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;----------------------------------------------------------------------------------------------------------&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;[<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(<ref refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" kindref="member">i</ref>+1)&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>]<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;t_ticker&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" kindref="member">m_tickerData</ref>[t_ticker]-&gt;PrintDataHead();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_tickerData[t_ticker]-&gt;PrintAllColumns();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;******************************************&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Dorothy:<sp/>Loaded<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="class_data_access_1aa2021225186679fab899867e14256462" kindref="member">m_tickerNames</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tickers<sp/>successfully.&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>********************<sp/>TRASH<sp/>METHODS<sp/>**********************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*********************************************************</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="DataAccess.cpp"/>
  </compounddef>
</doxygen>

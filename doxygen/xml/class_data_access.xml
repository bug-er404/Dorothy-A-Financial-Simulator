<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="class_data_access" kind="class" language="C++" prot="public">
    <compoundname>DataAccess</compoundname>
    <includes refid="_data_access_8h" local="no">DataAccess.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_data_access_1a103ea7eafa2a2da552050ce3726955b9" prot="private" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string DataAccess::m_tradingDatesRefTicker</definition>
        <argsstring></argsstring>
        <name>m_tradingDatesRefTicker</name>
        <initializer>= &quot;IBM&quot;</initializer>
        <briefdescription>
<para><ref refid="class_ticker_data" kindref="compound">TickerData</ref> for referencing trading dates. Uses IBM. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="65" column="30" bodyfile="DataAccess.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" compoundref="_data_access_8cpp" startline="154" endline="172">loadTradingDates</referencedby>
        <referencedby refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" compoundref="_data_access_8cpp" startline="182" endline="219">loadTickerData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_access_1a6052079ffd5ad4d1d20dc311a2edf1de" prot="private" static="yes" mutable="no">
        <type><ref refid="class_data_access" kindref="compound">DataAccess</ref> *</type>
        <definition>DataAccess * DataAccess::m_dataInstance</definition>
        <argsstring></argsstring>
        <name>m_dataInstance</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Single <ref refid="class_data_access" kindref="compound">DataAccess</ref> instance var. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="_data_access_8cpp" kindref="compound">DataAccess.cpp</ref> Implementation of <ref refid="_data_access_8h" kindref="compound">DataAccess.h</ref></para>
<para>Created by Salil Maharjan on 4/29/20. Copyright Â© 2020 Salil Maharjan. All rights reserved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="67" column="23" bodyfile="DataAccess.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="class_data_access_1abc3ed687ddf164425f4f7c797eddcb55" compoundref="_data_access_8cpp" startline="53" endline="59">GetDbInstance</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_access_1aa2021225186679fab899867e14256462" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; DataAccess::m_tickerNames</definition>
        <argsstring></argsstring>
        <name>m_tickerNames</name>
        <briefdescription>
<para><ref refid="class_ticker_data" kindref="compound">TickerData</ref> names specified in the universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="69" column="24" bodyfile="DataAccess.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" compoundref="_data_access_8cpp" startline="124" endline="145">loadTickerNames</referencedby>
        <referencedby refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" compoundref="_data_access_8cpp" startline="182" endline="219">loadTickerData</referencedby>
        <referencedby refid="class_data_access_1a3192674ca52329b3db8f0a5f3c0e9141" compoundref="_data_access_8h" startline="27" endline="27">GetUniverse</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_access_1a3675547c80c87288d0f3afb679566b9a" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; <ref refid="class_date_time" kindref="compound">DateTime</ref> * &gt;</type>
        <definition>std::vector&lt; DateTime * &gt; DataAccess::m_tradingDates</definition>
        <argsstring></argsstring>
        <name>m_tradingDates</name>
        <briefdescription>
<para>Trading dates loaded from reference ticker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="71" column="24" bodyfile="DataAccess.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="class_data_access_1a999d5066dde617c2b244606d57f003ed" compoundref="_data_access_8cpp" startline="70" endline="73">CheckDateRange</referencedby>
        <referencedby refid="class_data_access_1aca25ff0e8ce73d87a8e2f4584ee87149" compoundref="_data_access_8cpp" startline="84" endline="95">GetTradingDatesInRange</referencedby>
        <referencedby refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" compoundref="_data_access_8cpp" startline="154" endline="172">loadTradingDates</referencedby>
        <referencedby refid="class_data_access_1a597aaef015817d95979ee025a6e81121" compoundref="_data_access_8h" startline="30" endline="30">GetTradingDates</referencedby>
        <referencedby refid="class_data_access_1a9e9db2cee4493ae998b9abaa17fe6be6" compoundref="_data_access_8h" startline="33" endline="33">GetOldestTradingDate</referencedby>
        <referencedby refid="class_data_access_1a515ad86dcb1b7dded8aabb7400b1609d" compoundref="_data_access_8h" startline="36" endline="36">GetLatestTradingDate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" prot="private" static="yes" mutable="no">
        <type>std::map&lt; std::string, <ref refid="class_ticker_data" kindref="compound">TickerData</ref> * &gt;</type>
        <definition>std::map&lt; std::string, TickerData * &gt; DataAccess::m_tickerData</definition>
        <argsstring></argsstring>
        <name>m_tickerData</name>
        <briefdescription>
<para>Map variable ( <ref refid="class_ticker_data" kindref="compound">TickerData</ref> Name : <ref refid="class_ticker_data" kindref="compound">TickerData</ref> Data ) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="73" column="21" bodyfile="DataAccess.h" bodystart="73" bodyend="-1"/>
        <referencedby refid="class_data_access_1a8fef2d9972260413cc5c949d6ad7f245" compoundref="_data_access_8cpp" startline="105" endline="111">GetTickerData</referencedby>
        <referencedby refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" compoundref="_data_access_8cpp" startline="182" endline="219">loadTickerData</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_data_access_1a3192674ca52329b3db8f0a5f3c0e9141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt;</type>
        <definition>const std::vector&lt;std::string&gt; DataAccess::GetUniverse</definition>
        <argsstring>()</argsstring>
        <name>GetUniverse</name>
        <briefdescription>
<para>Get constituent names in the universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="27" column="23" bodyfile="DataAccess.h" bodystart="27" bodyend="27"/>
        <references refid="class_data_access_1aa2021225186679fab899867e14256462" compoundref="_data_access_8h" startline="69">m_tickerNames</references>
        <referencedby refid="class_simulator_1a3752d08182992d06e6dc5783ed82cafc" compoundref="_simulator_8cpp" startline="410" endline="438">Simulator::initializeTradingTickers</referencedby>
        <referencedby refid="class_simulator_1a9a703ddcca1a802b3df9a9dc921927ae" compoundref="_simulator_8cpp" startline="75" endline="198">Simulator::RunSimulation</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a597aaef015817d95979ee025a6e81121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_date_time" kindref="compound">DateTime</ref> * &gt;</type>
        <definition>const std::vector&lt;DateTime*&gt; DataAccess::GetTradingDates</definition>
        <argsstring>()</argsstring>
        <name>GetTradingDates</name>
        <briefdescription>
<para>Get trading dates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="30" column="23" bodyfile="DataAccess.h" bodystart="30" bodyend="30"/>
        <references refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" compoundref="_data_access_8h" startline="71">m_tradingDates</references>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a9e9db2cee4493ae998b9abaa17fe6be6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_date_time" kindref="compound">DateTime</ref> *</type>
        <definition>DateTime* DataAccess::GetOldestTradingDate</definition>
        <argsstring>()</argsstring>
        <name>GetOldestTradingDate</name>
        <briefdescription>
<para>Get oldest trading date for which data is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="33" column="14" bodyfile="DataAccess.h" bodystart="33" bodyend="33"/>
        <references refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" compoundref="_data_access_8h" startline="71">m_tradingDates</references>
        <referencedby refid="class_simulator_1ac66d4a8840edc51e1fda473d677ccce2" compoundref="_simulator_8cpp" startline="447" endline="458">Simulator::verifyDateParameters</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a515ad86dcb1b7dded8aabb7400b1609d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_date_time" kindref="compound">DateTime</ref> *</type>
        <definition>DateTime* DataAccess::GetLatestTradingDate</definition>
        <argsstring>()</argsstring>
        <name>GetLatestTradingDate</name>
        <briefdescription>
<para>Get most recent trading date for which data is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="36" column="14" bodyfile="DataAccess.h" bodystart="36" bodyend="36"/>
        <references refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" compoundref="_data_access_8h" startline="71">m_tradingDates</references>
        <referencedby refid="class_simulator_1ac66d4a8840edc51e1fda473d677ccce2" compoundref="_simulator_8cpp" startline="447" endline="458">Simulator::verifyDateParameters</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1aca25ff0e8ce73d87a8e2f4584ee87149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_date_time" kindref="compound">DateTime</ref> * &gt;</type>
        <definition>std::vector&lt; DateTime * &gt; DataAccess::GetTradingDatesInRange</definition>
        <argsstring>(DateTime *a_from, DateTime *a_to)</argsstring>
        <name>GetTradingDatesInRange</name>
        <param>
          <type><ref refid="class_date_time" kindref="compound">DateTime</ref> *</type>
          <declname>a_from</declname>
        </param>
        <param>
          <type><ref refid="class_date_time" kindref="compound">DateTime</ref> *</type>
          <declname>a_to</declname>
        </param>
        <briefdescription>
<para>Get trading dates from &quot;a_from&quot; to &quot;a_to&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1aca25ff0e8ce73d87a8e2f4584ee87149" kindref="member">DataAccess::GetTradingDatesInRange</ref>. Get trading dates from &quot;a_from&quot; to &quot;a_to&quot; according to reference ticker. IBM. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_from</parametername>
</parameternamelist>
<parameterdescription>
<para>DateTime* Starting date range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_to</parametername>
</parameternamelist>
<parameterdescription>
<para>DateTime* End of date range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector&lt;DateTime*&gt; All trading dates in range. </para>
</simplesect>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="39" column="17" bodyfile="DataAccess.cpp" bodystart="84" bodyend="95"/>
        <references refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" compoundref="_c_make_cache_8txt" startline="299">i</references>
        <references refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" compoundref="_data_access_8h" startline="71">m_tradingDates</references>
        <referencedby refid="class_simulator_1a9a703ddcca1a802b3df9a9dc921927ae" compoundref="_simulator_8cpp" startline="75" endline="198">Simulator::RunSimulation</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a8fef2d9972260413cc5c949d6ad7f245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ticker_data" kindref="compound">TickerData</ref> *</type>
        <definition>TickerData * DataAccess::GetTickerData</definition>
        <argsstring>(std::string a_ticker)</argsstring>
        <name>GetTickerData</name>
        <param>
          <type>std::string</type>
          <declname>a_ticker</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_ticker_data" kindref="compound">TickerData</ref> Data. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1a8fef2d9972260413cc5c949d6ad7f245" kindref="member">DataAccess::GetTickerData</ref>. Get ticker data for a_ticker. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_ticker</parametername>
</parameternamelist>
<parameterdescription>
<para>string The name of the ticker to get data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TickerData* Price data of a_ticker </para>
</simplesect>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="42" column="16" bodyfile="DataAccess.cpp" bodystart="105" bodyend="111"/>
        <references refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" compoundref="_data_access_8h" startline="73">m_tickerData</references>
        <referencedby refid="class_simulator_1a9a703ddcca1a802b3df9a9dc921927ae" compoundref="_simulator_8cpp" startline="75" endline="198">Simulator::RunSimulation</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1ac9ca4ff2f082d5982bf4f00b6394c078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DataAccess::~DataAccess</definition>
        <argsstring>()=default</argsstring>
        <name>~DataAccess</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="52" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a999d5066dde617c2b244606d57f003ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DataAccess::CheckDateRange</definition>
        <argsstring>(DateTime *a_startDate, DateTime *a_endDate)</argsstring>
        <name>CheckDateRange</name>
        <param>
          <type><ref refid="class_date_time" kindref="compound">DateTime</ref> *</type>
          <declname>a_startDate</declname>
        </param>
        <param>
          <type><ref refid="class_date_time" kindref="compound">DateTime</ref> *</type>
          <declname>a_endDate</declname>
        </param>
        <briefdescription>
<para>Check date range with available data&apos;s date range. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1a999d5066dde617c2b244606d57f003ed" kindref="member">DataAccess::CheckDateRange</ref>. Check date range with available data&apos;s date range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_startDate</parametername>
</parameternamelist>
<parameterdescription>
<para>DateTime* Starting date range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_endDate</parametername>
</parameternamelist>
<parameterdescription>
<para>DateTime* End of date range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool If data is available for the date range. </para>
</simplesect>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="55" column="10" bodyfile="DataAccess.cpp" bodystart="70" bodyend="73"/>
        <references refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" compoundref="_data_access_8h" startline="71">m_tradingDates</references>
        <referencedby refid="class_simulator_1ac66d4a8840edc51e1fda473d677ccce2" compoundref="_simulator_8cpp" startline="447" endline="458">Simulator::verifyDateParameters</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_data_access_1abc3ed687ddf164425f4f7c797eddcb55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_data_access" kindref="compound">DataAccess</ref> *</type>
        <definition>DataAccess * DataAccess::GetDbInstance</definition>
        <argsstring>(const std::string a_directory, const std::string a_universe)</argsstring>
        <name>GetDbInstance</name>
        <param>
          <type>const std::string</type>
          <declname>a_directory</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>a_universe</declname>
        </param>
        <briefdescription>
<para>Static access method to create a singleton <ref refid="class_data_access" kindref="compound">DataAccess</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1abc3ed687ddf164425f4f7c797eddcb55" kindref="member">DataAccess::GetDbInstance</ref>. Method to create a single instance of <ref refid="class_data_access" kindref="compound">DataAccess</ref> and prevent multiple instances. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_directory</parametername>
</parameternamelist>
<parameterdescription>
<para>string Price data directory path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_universe</parametername>
</parameternamelist>
<parameterdescription>
<para>string Directory path for file with ticker name universe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>DataAccess* Single instance of the path. </para>
</simplesect>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="49" column="23" bodyfile="DataAccess.cpp" bodystart="53" bodyend="59"/>
        <references refid="class_data_access_1af99b77ec290d1e723d0540ba9d9a95ba" compoundref="_data_access_8h" startline="80" endline="80">DataAccess</references>
        <references refid="class_data_access_1a6052079ffd5ad4d1d20dc311a2edf1de" compoundref="_data_access_8h" startline="67">m_dataInstance</references>
        <referencedby refid="class_simulator_1a0e2d73d3f5c09acdcac93e22a95b721d" compoundref="_simulator_8cpp" startline="212" endline="238">Simulator::initializeSimulator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_data_access_1af99b77ec290d1e723d0540ba9d9a95ba" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataAccess::DataAccess</definition>
        <argsstring>()</argsstring>
        <name>DataAccess</name>
        <briefdescription>
<para>Private constructors to prevent multiple instancing: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="80" column="5" bodyfile="DataAccess.h" bodystart="80" bodyend="80"/>
        <referencedby refid="class_data_access_1abc3ed687ddf164425f4f7c797eddcb55" compoundref="_data_access_8cpp" startline="53" endline="59">GetDbInstance</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a6401bb06d5a926b9fdb9d03f58d9952b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DataAccess::DataAccess</definition>
        <argsstring>(const std::string &amp;a_directory, const std::string &amp;a_universe)</argsstring>
        <name>DataAccess</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>a_directory</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>a_universe</declname>
        </param>
        <briefdescription>
<para>Main class parameterized constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1af99b77ec290d1e723d0540ba9d9a95ba" kindref="member">DataAccess::DataAccess</ref>. Constructor to create single instance of <ref refid="class_data_access" kindref="compound">DataAccess</ref>. Stores price data for the specified universe in memory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_directory</parametername>
</parameternamelist>
<parameterdescription>
<para>string Price data directory path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_universe</parametername>
</parameternamelist>
<parameterdescription>
<para>string Directory path for ticker name universe file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="82" column="5" bodyfile="DataAccess.cpp" bodystart="34" bodyend="38"/>
        <references refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" compoundref="_data_access_8cpp" startline="182" endline="219">loadTickerData</references>
        <references refid="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" compoundref="_data_access_8cpp" startline="124" endline="145">loadTickerNames</references>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a253a1c0e03533be0b8173851e237305b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataAccess::DataAccess</definition>
        <argsstring>(DataAccess const &amp;)</argsstring>
        <name>DataAccess</name>
        <param>
          <type><ref refid="class_data_access" kindref="compound">DataAccess</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Private copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="85" column="5" bodyfile="DataAccess.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1aec4ac0b293f6123602cb5edd1dd58652" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_data_access" kindref="compound">DataAccess</ref> &amp;</type>
        <definition>DataAccess&amp; DataAccess::operator=</definition>
        <argsstring>(DataAccess const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_data_access" kindref="compound">DataAccess</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Delete assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="87" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAccess::loadTickerNames</definition>
        <argsstring>(const std::string &amp;a_universe)</argsstring>
        <name>loadTickerNames</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>a_universe</declname>
        </param>
        <briefdescription>
<para>Method to load ticker names from the constituent universe file. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" kindref="member">DataAccess::loadTickerNames</ref>. Method to load ticker names in the universe. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_universe</parametername>
</parameternamelist>
<parameterdescription>
<para>string Directory path for ticker name universe file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="94" column="10" bodyfile="DataAccess.cpp" bodystart="124" bodyend="145"/>
        <references refid="class_data_access_1aa2021225186679fab899867e14256462" compoundref="_data_access_8h" startline="69">m_tickerNames</references>
        <referencedby refid="class_data_access_1a6401bb06d5a926b9fdb9d03f58d9952b" compoundref="_data_access_8cpp" startline="34" endline="38">DataAccess</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a5ac301f8e12a423d054ec44865e973de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAccess::loadTickerData</definition>
        <argsstring>(const std::string &amp;a_directory)</argsstring>
        <name>loadTickerData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>a_directory</declname>
        </param>
        <briefdescription>
<para>Method to load price data for loaded tickers. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" kindref="member">DataAccess::loadTickerData</ref>. Method to load price data for each ticker in the universe. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_directory</parametername>
</parameternamelist>
<parameterdescription>
<para>string Price data directory path. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="96" column="10" bodyfile="DataAccess.cpp" bodystart="182" bodyend="219"/>
        <references refid="_c_make_cache_8txt_1a7e98b8a17c0aad30ba64d47b74e2a6c1" compoundref="_c_make_cache_8txt" startline="299">i</references>
        <references refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" compoundref="_data_access_8cpp" startline="154" endline="172">loadTradingDates</references>
        <references refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" compoundref="_data_access_8h" startline="73">m_tickerData</references>
        <references refid="class_data_access_1aa2021225186679fab899867e14256462" compoundref="_data_access_8h" startline="69">m_tickerNames</references>
        <references refid="class_data_access_1a103ea7eafa2a2da552050ce3726955b9" compoundref="_data_access_8h" startline="65">m_tradingDatesRefTicker</references>
        <referencedby refid="class_data_access_1a6401bb06d5a926b9fdb9d03f58d9952b" compoundref="_data_access_8cpp" startline="34" endline="38">DataAccess</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataAccess::loadTradingDates</definition>
        <argsstring>(const std::string &amp;a_directory)</argsstring>
        <name>loadTradingDates</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>a_directory</declname>
        </param>
        <briefdescription>
<para>Method to load trading dates from the refence ticker, IBM. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" kindref="member">DataAccess::loadTradingDates</ref>. Method to load trading dates from the refence ticker, IBM. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_directory</parametername>
</parameternamelist>
<parameterdescription>
<para>string Price data directory path. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Salil Maharjan </para>
</simplesect>
<simplesect kind="date"><para>4/29/20. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DataAccess.h" line="98" column="10" bodyfile="DataAccess.cpp" bodystart="154" bodyend="172"/>
        <references refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" compoundref="_data_access_8h" startline="71">m_tradingDates</references>
        <references refid="class_data_access_1a103ea7eafa2a2da552050ce3726955b9" compoundref="_data_access_8h" startline="65">m_tradingDatesRefTicker</references>
        <referencedby refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" compoundref="_data_access_8cpp" startline="182" endline="219">loadTickerData</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="_data_access_8h" kindref="compound">DataAccess.h</ref> Singleton class for storing data of ticker price data in internal memory. Cannot have multiple instances since it can use a lot of memory.</para>
<para>Created by Salil Maharjan on 4/29/20. Copyright Â© 2020 Salil Maharjan. All rights reserved. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>DateTime</label>
        <link refid="class_date_time"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-m_date</edgelabel>
          <edgelabel>-dayPreMonth</edgelabel>
          <edgelabel>-m_FakeTodayValue</edgelabel>
          <edgelabel>-daysInMonth</edgelabel>
          <edgelabel>+BlankDate</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::vector&lt; double &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; std::string, TickerData * &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+keys</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="4">
        <label>int</label>
      </node>
      <node id="10">
        <label>double</label>
      </node>
      <node id="11">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>TickerData</label>
        <link refid="class_ticker_data"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+NA_VAL</edgelabel>
          <edgelabel>-m_tradingDateIndexEnd</edgelabel>
          <edgelabel>-m_tradingDateIndexStart</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-m_tickerName</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-m_tickerDates</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-m_tickerData</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; DateTime * &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>DataAccess</label>
        <link refid="class_data_access"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-m_tickerData</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-m_tradingDatesRefTicker</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-m_tradingDates</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-m_tickerNames</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>-m_dataInstance</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="DataAccess.h" line="18" column="1" bodyfile="DataAccess.h" bodystart="19" bodyend="99"/>
    <listofallmembers>
      <member refid="class_data_access_1a999d5066dde617c2b244606d57f003ed" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>CheckDateRange</name></member>
      <member refid="class_data_access_1af99b77ec290d1e723d0540ba9d9a95ba" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>DataAccess</name></member>
      <member refid="class_data_access_1a6401bb06d5a926b9fdb9d03f58d9952b" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>DataAccess</name></member>
      <member refid="class_data_access_1a253a1c0e03533be0b8173851e237305b" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>DataAccess</name></member>
      <member refid="class_data_access_1abc3ed687ddf164425f4f7c797eddcb55" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>GetDbInstance</name></member>
      <member refid="class_data_access_1a515ad86dcb1b7dded8aabb7400b1609d" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>GetLatestTradingDate</name></member>
      <member refid="class_data_access_1a9e9db2cee4493ae998b9abaa17fe6be6" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>GetOldestTradingDate</name></member>
      <member refid="class_data_access_1a8fef2d9972260413cc5c949d6ad7f245" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>GetTickerData</name></member>
      <member refid="class_data_access_1a597aaef015817d95979ee025a6e81121" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>GetTradingDates</name></member>
      <member refid="class_data_access_1aca25ff0e8ce73d87a8e2f4584ee87149" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>GetTradingDatesInRange</name></member>
      <member refid="class_data_access_1a3192674ca52329b3db8f0a5f3c0e9141" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>GetUniverse</name></member>
      <member refid="class_data_access_1a5ac301f8e12a423d054ec44865e973de" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>loadTickerData</name></member>
      <member refid="class_data_access_1a22d1b0fdc94c69e4fd22ab2806c0774c" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>loadTickerNames</name></member>
      <member refid="class_data_access_1a44f425fb23df421e7b4d5fd1545731ad" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>loadTradingDates</name></member>
      <member refid="class_data_access_1a6052079ffd5ad4d1d20dc311a2edf1de" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>m_dataInstance</name></member>
      <member refid="class_data_access_1a33d75e928a5979c6e6cd4cdc47a3802f" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>m_tickerData</name></member>
      <member refid="class_data_access_1aa2021225186679fab899867e14256462" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>m_tickerNames</name></member>
      <member refid="class_data_access_1a3675547c80c87288d0f3afb679566b9a" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>m_tradingDates</name></member>
      <member refid="class_data_access_1a103ea7eafa2a2da552050ce3726955b9" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>m_tradingDatesRefTicker</name></member>
      <member refid="class_data_access_1aec4ac0b293f6123602cb5edd1dd58652" prot="private" virt="non-virtual"><scope>DataAccess</scope><name>operator=</name></member>
      <member refid="class_data_access_1ac9ca4ff2f082d5982bf4f00b6394c078" prot="public" virt="non-virtual"><scope>DataAccess</scope><name>~DataAccess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
